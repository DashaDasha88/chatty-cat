{"ast":null,"code":"var _jsxFileName = \"/home/dasha/learning/chatty-cat/src/components/ChatFeed.jsx\";\nimport React from 'react';\nimport MessageForm from \"./MessageForm\";\nimport MyMessage from \"./MyMessage\";\nimport TheirMessage from \"./TheirMessage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChatFeed = props => {\n  const {\n    chats,\n    activeChat,\n    userName,\n    messages\n  } = props;\n  const chat = chats && chats[activeChat];\n\n  const renderReadReceipts = (message, isMyMessage) => {\n    chat.people.map((person, index) => {\n      var _message$sender;\n\n      return person.last_read === message.id && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"read-receipt\",\n        style: {\n          float: isMyMessage ? \"right\" : \"left\",\n          backgroundImage: `url(${message === null || message === void 0 ? void 0 : (_message$sender = message.sender) === null || _message$sender === void 0 ? void 0 : _message$sender.avatar})`\n        }\n      }, `read_${index}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 7\n      }, this);\n    });\n  };\n\n  const renderMessages = () => {\n    const keys = Object.keys(messages);\n    return keys.map((key, index) => {\n      const message = messages[key];\n      const lastMessageKey = index === 0 ? null : keys[index - 1];\n      const isMyMessage = userName === message.sender.username;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"100%\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-block\",\n          children: isMyMessage ? /*#__PURE__*/_jsxDEV(MyMessage, {\n            message: message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(TheirMessage, {\n            message: message,\n            lastMessage: messages[lastMessageKey]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"read-receipts\",\n          style: {\n            marginRight: isMyMessage ? \"18px\" : '0px',\n            marginLeft: isMyMessage ? \"0px\" : \"68px\"\n          },\n          children: \"read-receipts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, `msg_${index}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this);\n    });\n  };\n\n  if (!chat) return 'Loading...';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-feed\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-title-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-title\",\n        children: chat === null || chat === void 0 ? void 0 : chat.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-subtitle\",\n        children: chat.people.map(person => `${person.person.username}`)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), renderMessages(), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: \"100px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-form-container\",\n      children: /*#__PURE__*/_jsxDEV(MessageForm, { ...props,\n        chatId: activeChat\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ChatFeed;\nexport default ChatFeed;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatFeed\");","map":{"version":3,"sources":["/home/dasha/learning/chatty-cat/src/components/ChatFeed.jsx"],"names":["React","MessageForm","MyMessage","TheirMessage","ChatFeed","props","chats","activeChat","userName","messages","chat","renderReadReceipts","message","isMyMessage","people","map","person","index","last_read","id","float","backgroundImage","sender","avatar","renderMessages","keys","Object","key","lastMessageKey","username","width","marginRight","marginLeft","title","height"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport MessageForm from \"./MessageForm\";\nimport MyMessage from \"./MyMessage\";\nimport TheirMessage from \"./TheirMessage\";\n\nconst ChatFeed = (props) => {\n\n  const { chats, activeChat, userName, messages } = props;\n\n  const chat = chats && chats[activeChat];\n\n  const renderReadReceipts = (message, isMyMessage) => {\n    chat.people.map((person, index) => person.last_read === message.id && (\n      <div\n      key={`read_${index}`}\n      className=\"read-receipt\"\n      style={{ \n        float: isMyMessage ? \"right\" : \"left\",\n        backgroundImage: `url(${message?.sender?.avatar})`\n      }}\n      />\n    ))\n  }\n\n  const renderMessages = () => {\n    const keys = Object.keys(messages);\n\n    return keys.map((key, index) => {\n      const message = messages[key];\n      const lastMessageKey = index === 0 ? null : keys[index - 1];\n      const isMyMessage = userName === message.sender.username;\n\n      return (\n        <div key={`msg_${index}`} style={{ width: \"100%\" }} >\n          <div className=\"message-block\">\n            {\n              isMyMessage\n              ? <MyMessage message={message} />\n              : <TheirMessage message={message} lastMessage={messages[lastMessageKey]} />\n            }\n\n          </div>\n          <div className=\"read-receipts\" style={{ marginRight: isMyMessage ? \"18px\" : '0px', marginLeft: isMyMessage ? \"0px\" : \"68px\"}}>\n            read-receipts\n          </div>\n        </div>\n      );\n\n    })\n  }\n\n  if(!chat) return 'Loading...';\n\n  return (\n    <div className=\"chat-feed\">\n      <div className=\"chat-title-container\">\n        <div className=\"chat-title\">{chat ?.title}</div>\n        <div className=\"chat-subtitle\">\n          {chat.people.map((person) => `${person.person.username}`)}\n        </div>\n      </div>\n      {renderMessages()}\n      <div style={{ height: \"100px\" }} />\n      <div className=\"message-form-container\">\n        <MessageForm {...props} chatId={activeChat} />\n      </div>\n    </div>\n  )\n\n}\n\nexport default ChatFeed;\n"]},"metadata":{},"sourceType":"module"}